{"version":3,"file":"widgets/select2-tagbox.min.js","mappings":"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","sources":["webpack://surveyjs-widgets/webpack/universalModuleDefinition","webpack://surveyjs-widgets/./src/images/tagbox.svg","webpack://surveyjs-widgets/webpack/bootstrap","webpack://surveyjs-widgets/webpack/runtime/define property getters","webpack://surveyjs-widgets/webpack/runtime/hasOwnProperty shorthand","webpack://surveyjs-widgets/webpack/runtime/make namespace object","webpack://surveyjs-widgets/./src/select2-tagbox.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widgets/select2-tagbox\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widgets/select2-tagbox\"] = factory();\n\telse\n\t\troot[\"widgets/select2-tagbox\"] = factory();\n})(self, () => {\nreturn ","module.exports = \"<svg viewBox=\\\"0 0 16 16\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><g><path d=\\\"M15,11H0V5h15V11z M1,10h13V6H1V10z\\\"></path></g><rect x=\\\"2\\\" y=\\\"7\\\" width=\\\"4\\\" height=\\\"2\\\"></rect><rect x=\\\"7\\\" y=\\\"7\\\" width=\\\"4\\\" height=\\\"2\\\"></rect></svg>\"","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","function init(Survey, $) {\n  const iconId = \"icon-tagbox\";\n  Survey.SvgRegistry && Survey.SvgRegistry.registerIconFromSvg(iconId, require('svg-inline-loader?classPrefix!./images/tagbox.svg'), \"\");\n  $ = $ || window.$;\n  var widget = {\n    name: \"tagbox\",\n    title: \"Tag box\",\n    iconName: iconId,\n    widgetIsLoaded: function () {\n      return typeof $ == \"function\" && !!$.fn.select2;\n    },\n    defaultJSON: {\n      choices: [\"Item 1\", \"Item 2\", \"Item 3\"],\n    },\n    htmlTemplate:\n      \"<div><select multiple='multiple' style='width: 100%;'></select><textarea></textarea></div>\",\n    isFit: function (question) {\n      return question.getType() === \"tagbox\";\n    },\n    activatedByChanged: function (activatedBy) {\n      Survey.JsonObject.metaData.addClass(\n        \"tagbox\",\n        [\n          { name: \"hasOther:boolean\", visible: false },\n          { name: \"hasSelectAll:boolean\", visible: false },\n          { name: \"hasNone:boolean\", visible: false },\n          { name: \"otherText\", visible: false },\n          { name: \"selectAllText\", visible: false },\n          { name: \"noneText\", visible: false },\n        ],\n        null,\n        \"checkbox\"\n      );\n      Survey.JsonObject.metaData.addProperty(\"tagbox\", {\n        name: \"select2Config\",\n        category: \"general\",\n        default: null,\n      });\n      Survey.JsonObject.metaData.addProperty(\"tagbox\", {\n        name: \"placeholder\",\n        category: \"general\",\n        default: \"\",\n      });\n      Survey.JsonObject.metaData.addProperty(\"tagbox\", {\n        name: \"allowAddNewTag:boolean\",\n        category: \"general\",\n        default: false,\n      });\n    },\n    fixStyles: function (el) {\n      el.parentElement.querySelector(\".select2-search__field\").style.border =\n        \"none\";\n    },\n    afterRender: function (question, el) {\n      var self = this;\n      var select2Config = question.select2Config;\n      var settings =\n        select2Config && typeof select2Config == \"string\"\n          ? JSON.parse(select2Config)\n          : select2Config;\n      var $el = $(el).is(\"select\") ? $(el) : $(el).find(\"select\");\n\n      self.willUnmount(question, el);\n\n      if (!settings) settings = {};\n      settings.placeholder = question.placeholder;\n      settings.tags = question.allowAddNewTag;\n      if (question.allowAddNewTag) {\n        question.keepIncorrectValues = true;\n      }\n      settings.disabled = question.isReadOnly;\n      settings.theme = \"classic\";\n      if (!!question.maxSelectedChoices) {\n        settings.maximumSelectionLength = question.maxSelectedChoices;\n      }\n\n      $el.select2(settings);\n\n      var $otherElement = $(el).find(\"textarea\");\n      if (\n        !!question.survey &&\n        !!question.survey.css &&\n        !!question.survey.css.checkbox\n      ) {\n        $otherElement.addClass(question.survey.css.checkbox.other);\n      }\n      $otherElement.placeholder = question.otherPlaceHolder;\n      $otherElement.bind(\"input propertychange\", function () {\n        question.comment = $otherElement.val();\n      });\n      var updateComment = function () {\n        $otherElement.val(question.comment);\n        if (question.isOtherSelected) {\n          $otherElement.show();\n        } else {\n          $otherElement.hide();\n        }\n      };\n\n      self.fixStyles(el);\n      var question;\n      var updateValueHandler = function () {\n        if (question.hasSelectAll && question.isAllSelected) {\n          $el\n            .val([question.selectAllItemValue.value].concat(question.value))\n            .trigger(\"change\");\n        } else {\n          $el.val(question.value).trigger(\"change\");\n        }\n        self.fixStyles(el);\n        updateComment();\n      };\n      var updateChoices = function () {\n        $el.select2().empty();\n        if (settings.ajax) {\n          $el.select2(settings);\n        } else {\n          settings.data = question.visibleChoices.map(function (choice) {\n            return {\n              id: choice.value,\n              text: choice.text,\n            };\n          });\n          $el.select2(settings);\n        }\n        updateValueHandler();\n      };\n      var isAllItemSelected = function (value) {\n        return (\n          question.hasSelectAll && value === question.selectAllItemValue.value\n        );\n      };\n      question._propertyValueChangedFnSelect2 = function () {\n        updateChoices();\n      };\n\n      $otherElement.prop(\"disabled\", question.isReadOnly);\n      question.readOnlyChangedCallback = function () {\n        $el.prop(\"disabled\", question.isReadOnly);\n        $otherElement.prop(\"disabled\", question.isReadOnly);\n      };\n      question.registerFunctionOnPropertyValueChanged(\n        \"visibleChoices\",\n        question._propertyValueChangedFnSelect2\n      );\n      question.valueChangedCallback = updateValueHandler;\n      $el.on(\"select2:select\", function (e) {\n        if (isAllItemSelected(e.params.data.id)) {\n          question.selectAll();\n        } else {\n          question.value = (question.value || []).concat(e.params.data.id);\n        }\n        updateComment();\n      });\n      $el.on(\"select2:unselect\", function (e) {\n        const select2Val = e.params.data.id;\n        if (isAllItemSelected(select2Val)) {\n          question.clearValue();\n        } else {\n          const val = [].concat(question.renderedValue);\n          if (Array.isArray(val)) {\n            for (var i = 0; i < val.length; i++) {\n              if (val[i] == select2Val || (!!val[i] && val[i].toString() == select2Val)) {\n                val.splice(i, 1);\n                question.renderedValue = val;\n                break;\n              }\n            }\n          }\n        }\n        updateComment();\n      });\n      updateChoices();\n    },\n    willUnmount: function (question, el) {\n      if (!question._propertyValueChangedFnSelect2) return;\n\n      var $select2 = $(el).find(\"select\");\n      if (!!$select2.data(\"select2\")) {\n        $select2.off(\"select2:select\").select2(\"destroy\");\n      }\n      question.readOnlyChangedCallback = null;\n      question.valueChangedCallback = null;\n      question.unRegisterFunctionOnPropertyValueChanged(\n        \"visibleChoices\",\n        question._propertyValueChangedFnSelect2\n      );\n      question._propertyValueChangedFnSelect2 = undefined;\n    },\n    pdfQuestionType: \"checkbox\",\n  };\n\n  Survey.CustomWidgetCollection.Instance.addCustomWidget(widget, \"customtype\");\n}\n\nif (typeof Survey !== \"undefined\") {\n  init(Survey, window.$);\n}\n\nexport default init;\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","init","Survey","$","iconId","SvgRegistry","registerIconFromSvg","window","widget","name","title","iconName","widgetIsLoaded","fn","select2","defaultJSON","choices","htmlTemplate","isFit","question","getType","activatedByChanged","activatedBy","JsonObject","metaData","addClass","visible","addProperty","category","default","fixStyles","el","parentElement","querySelector","style","border","afterRender","this","select2Config","settings","JSON","parse","$el","is","find","willUnmount","placeholder","tags","allowAddNewTag","keepIncorrectValues","disabled","isReadOnly","theme","maxSelectedChoices","maximumSelectionLength","$otherElement","survey","css","checkbox","other","otherPlaceHolder","bind","comment","val","updateComment","isOtherSelected","show","hide","updateValueHandler","hasSelectAll","isAllSelected","selectAllItemValue","concat","trigger","updateChoices","empty","ajax","data","visibleChoices","map","choice","id","text","isAllItemSelected","_propertyValueChangedFnSelect2","readOnlyChangedCallback","registerFunctionOnPropertyValueChanged","valueChangedCallback","on","e","params","selectAll","select2Val","clearValue","renderedValue","Array","isArray","i","length","toString","splice","$select2","off","unRegisterFunctionOnPropertyValueChanged","pdfQuestionType","CustomWidgetCollection","Instance","addCustomWidget"],"sourceRoot":""}