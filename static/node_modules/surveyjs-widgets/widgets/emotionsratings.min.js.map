{"version":3,"file":"widgets/emotionsratings.min.js","mappings":"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","sources":["webpack://surveyjs-widgets/webpack/universalModuleDefinition","webpack://surveyjs-widgets/webpack/bootstrap","webpack://surveyjs-widgets/webpack/runtime/define property getters","webpack://surveyjs-widgets/webpack/runtime/hasOwnProperty shorthand","webpack://surveyjs-widgets/webpack/runtime/make namespace object","webpack://surveyjs-widgets/./src/emotionsratings.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widgets/emotionsratings\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widgets/emotionsratings\"] = factory();\n\telse\n\t\troot[\"widgets/emotionsratings\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","function init(Survey, $) {\n  $ = $ || window.$;\n\n  var widget = {\n    name: \"emotionsratings\",\n    title: \"Emotions Ratings\",\n    iconName: \"icon-emotionsratings\",\n    widgetIsLoaded: function () {\n      return typeof $ == \"function\" && !!$.fn.emotionsRating;\n    },\n    defaultJSON: {\n      choices: [1, 2, 3, 4, 5],\n    },\n    isFit: function (question) {\n      return question.getType() === \"emotionsratings\";\n    },\n    isDefaultRender: false,\n    htmlTemplate: \"<div style='height: 33px'></div>\",\n    activatedByChanged: function (activatedBy) {\n      Survey.JsonObject.metaData.addClass(\n        \"emotionsratings\",\n        [\n          {\n            name: \"hasOther\",\n            visible: false,\n          },\n          {\n            name: \"otherText\",\n            visible: false,\n          },\n          {\n            name: \"optionsCaption\",\n            visible: false,\n          },\n          {\n            name: \"otherErrorText\",\n            visible: false,\n          },\n          {\n            name: \"storeOthersAsComment\",\n            visible: false,\n          },\n          {\n            name: \"renderAs\",\n            visible: false,\n          },\n        ],\n        null,\n        \"dropdown\"\n      );\n      Survey.JsonObject.metaData.addProperties(\"emotionsratings\", [\n        {\n          name: \"emotions:itemvalues\",\n          category: \"emotions\",\n          categoryIndex: 1,\n          default: [\"angry\", \"disappointed\", \"meh\", \"happy\", \"inLove\"],\n        },\n        {\n          name: \"emotionSize:number\",\n          category: \"emotions\",\n          default: 30,\n        },\n        {\n          name: \"emotionsCount:number\",\n          category: \"emotions\",\n          default: 5,\n        },\n        {\n          name: \"bgEmotion\",\n          category: \"emotions\",\n          default: \"happy\",\n        },\n        {\n          name: \"emotionColor\",\n          category: \"emotions\",\n          default: \"#FF0066\",\n        },\n      ]);\n    },\n    afterRender: function (question, el) {\n      var emotions = (question.emotions || []).map(function (item) {\n        return item.value;\n      });\n      if (emotions.length === 0) {\n        emotions = [\"angry\", \"disappointed\", \"meh\", \"happy\", \"inLove\"];\n      }\n      var options = {\n        emotionSize: question.emotionSize,\n        bgEmotion: question.bgEmotion,\n        emotions: emotions,\n        initialRating: question.value,\n        color: question.emotionColor,\n        count: question.emotionsCount,\n        onUpdate: function (value) {\n          question.value = value;\n        },\n      };\n      initWidget();\n\n      question.valueChangedCallback = initWidget;\n      question.readOnlyChangedCallback = initWidget;\n\n      function initWidget() {\n        el.innerHTML = \"<div></div>\";\n        $(el).off();\n        options.initialRating = question.value || 0;\n        options.disabled = question.isReadOnly;\n        $(el).find(\"div\").emotionsRating(options);\n      }\n    },\n    willUnmount: function (question, el) {\n      el.innerHTML = null;\n      $(el).off();\n      question.readOnlyChangedCallback = null;\n      question.valueChangedCallback = null;\n    },\n    pdfQuestionType: \"dropdown\",\n  };\n\n  Survey.CustomWidgetCollection.Instance.addCustomWidget(widget, \"customtype\");\n}\n\nif (typeof Survey !== \"undefined\") {\n  init(Survey, window.$);\n}\n\nexport default init;\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","init","Survey","$","window","widget","name","title","iconName","widgetIsLoaded","fn","emotionsRating","defaultJSON","choices","isFit","question","getType","isDefaultRender","htmlTemplate","activatedByChanged","activatedBy","JsonObject","metaData","addClass","visible","addProperties","category","categoryIndex","default","afterRender","el","emotions","map","item","length","options","emotionSize","bgEmotion","initialRating","color","emotionColor","count","emotionsCount","onUpdate","initWidget","innerHTML","off","disabled","isReadOnly","find","valueChangedCallback","readOnlyChangedCallback","willUnmount","pdfQuestionType","CustomWidgetCollection","Instance","addCustomWidget"],"sourceRoot":""}