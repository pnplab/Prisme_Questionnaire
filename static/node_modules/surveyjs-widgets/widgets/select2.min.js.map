{"version":3,"file":"widgets/select2.min.js","mappings":"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","sources":["webpack://surveyjs-widgets/webpack/universalModuleDefinition","webpack://surveyjs-widgets/webpack/bootstrap","webpack://surveyjs-widgets/webpack/runtime/define property getters","webpack://surveyjs-widgets/webpack/runtime/hasOwnProperty shorthand","webpack://surveyjs-widgets/webpack/runtime/make namespace object","webpack://surveyjs-widgets/./src/select2.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widgets/select2\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widgets/select2\"] = factory();\n\telse\n\t\troot[\"widgets/select2\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","function init(Survey, $) {\n  $ = $ || window.$;\n  var widget = {\n    activatedBy: \"property\",\n    name: \"select2\",\n    widgetIsLoaded: function () {\n      return typeof $ == \"function\" && !!$.fn.select2;\n    },\n    isFit: function (question) {\n      if (widget.activatedBy == \"property\")\n        return (\n          question[\"renderAs\"] === \"select2\" &&\n          question.getType() === \"dropdown\"\n        );\n      if (widget.activatedBy == \"type\")\n        return question.getType() === \"dropdown\";\n      if (widget.activatedBy == \"customtype\")\n        return question.getType() === \"select2\";\n      return false;\n    },\n    activatedByChanged: function (activatedBy) {\n      if (!this.widgetIsLoaded()) return;\n      widget.activatedBy = activatedBy;\n      Survey.JsonObject.metaData.removeProperty(\"dropdown\", \"renderAs\");\n      if (activatedBy == \"property\") {\n        Survey.JsonObject.metaData.addProperty(\"dropdown\", {\n          name: \"renderAs\",\n          category: \"general\",\n          default: \"default\",\n          choices: [\"select2\", \"default\"],\n        });\n        Survey.JsonObject.metaData.addProperty(\"dropdown\", {\n          dependsOn: \"renderAs\",\n          category: \"general\",\n          name: \"select2Config\",\n          visibleIf: function (obj) {\n            return obj.renderAs == \"select2\";\n          },\n        });\n      }\n      if (activatedBy == \"customtype\") {\n        Survey.JsonObject.metaData.addClass(\"select2\", [], null, \"dropdown\");\n        Survey.JsonObject.metaData.addProperty(\"select2\", {\n          name: \"select2Config\",\n          category: \"general\",\n          default: null,\n        });\n      }\n    },\n    htmlTemplate:\n      \"<div><select style='width: 100%;'></select><textarea></textarea></div>\",\n    afterRender: function (question, el) {\n      var select2Config = question.select2Config;\n      var settings =\n        select2Config && typeof select2Config == \"string\"\n          ? JSON.parse(select2Config)\n          : select2Config;\n      if (!settings) settings = {};\n      var $el = $(el).is(\"select\") ? $(el) : $(el).find(\"select\");\n      var $otherElement = $(el).find(\"textarea\");\n      $otherElement.addClass(question.cssClasses.other);\n      $otherElement.bind(\"input propertychange\", function () {\n        if (isSettingValue) return;\n        question.comment = $otherElement.val();\n      });\n\n      var updateComment = function () {\n        $otherElement.val(question.comment);\n        if (question.isOtherSelected) {\n          $otherElement.show();\n        } else {\n          $otherElement.hide();\n        }\n      };\n      var isSettingValue = false;\n      var updateValueHandler = function () {\n        if (isSettingValue) return;\n        isSettingValue = true;\n        if ($el.find('option[value=\"' + (question.value || \"\") + '\"]').length) {\n          $el.val(question.value).trigger(\"change\");\n        } else {\n          if (\n            question.value !== null &&\n            question.value !== undefined &&\n            !question.isOtherSelected\n          ) {\n            var newOption = new Option(\n              question.value, //TODO if question value is object then need to improve\n              question.value,\n              true,\n              true\n            );\n            $el.append(newOption).trigger(\"change\");\n          }\n        }\n        updateComment();\n        isSettingValue = false;\n      };\n      var updateChoices = function () {\n        $el.select2().empty();\n        if (!settings.placeholder && question.showOptionsCaption) {\n          settings.placeholder = question.optionsCaption;\n          settings.allowClear = true;\n        }\n        if (!settings.theme) {\n          settings.theme = \"classic\";\n        }\n        settings.disabled = question.isReadOnly;\n        if (settings.ajax) {\n          $el.select2(settings);\n          question.keepIncorrectValues = true;\n        } else {\n          var data = [];\n          if (!!settings.placeholder || question.showOptionsCaption) {\n            data.push({ id: \"\", text: \"\" });\n          }\n          settings.data = data.concat(\n            question.visibleChoices.map(function (choice) {\n              return {\n                id: choice.value,\n                text: choice.text,\n              };\n            })\n          );\n          question.clearIncorrectValues();\n          $el.select2(settings);\n        }\n        // fixed width accrording to https://stackoverflow.com/questions/45276778/select2-not-responsive-width-larger-than-container\n        if (!!el.querySelector(\".select2\")) {\n          el.querySelector(\".select2\").style.width = \"100%\";\n        }\n        if (!!el.nextElementSibling) {\n          el.nextElementSibling.style.marginBottom = \"1px\";\n        }\n        updateValueHandler();\n      };\n\n      $otherElement.prop(\"disabled\", question.isReadOnly);\n      question.readOnlyChangedCallback = function () {\n        $el.prop(\"disabled\", question.isReadOnly);\n        $otherElement.prop(\"disabled\", question.isReadOnly);\n      };\n\n      question.registerFunctionOnPropertyValueChanged(\n        \"visibleChoices\",\n        function () {\n          updateChoices();\n        }\n      );\n      updateChoices();\n      $el.on(\"change\", function (e) {\n        setTimeout(function () {\n          question.renderedValue = e.target.value;\n          updateComment();\n        }, 1);\n      });\n      $el.on(\"select2:select\", function (e) {\n        setTimeout(function () {\n          question.renderedValue = e.target.value;\n          updateComment();\n        }, 1);\n      });\n      $el.on(\"select2:opening\", function (e) {\n        if ($(this).data(\"unselecting\")) {\n          $(this).removeData(\"unselecting\");\n          e.preventDefault();\n        }\n      });\n      $el.on(\"select2:unselecting\", function (e) {\n        $(this).data(\"unselecting\", true);\n        setTimeout(function () {\n          question.renderedValue = null;\n          updateComment();\n        }, 1);\n      });\n      question.valueChangedCallback = updateValueHandler;\n      updateValueHandler();\n    },\n    willUnmount: function (question, el) {\n      question.readOnlyChangedCallback = null;\n      question.valueChangedCallback = null;\n      var $select2 = $(el).find(\"select\");\n      if (!!$select2.data(\"select2\")) {\n        $select2\n          .off(\"select2:select\")\n          .off(\"select2:unselecting\")\n          .off(\"select2:opening\")\n          .select2(\"destroy\");\n      }\n    },\n  };\n\n  Survey.CustomWidgetCollection.Instance.addCustomWidget(widget);\n}\n\nif (typeof Survey !== \"undefined\") {\n  init(Survey, window.$);\n}\n\nexport default init;\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","init","Survey","$","window","widget","activatedBy","name","widgetIsLoaded","fn","select2","isFit","question","getType","activatedByChanged","this","JsonObject","metaData","removeProperty","addProperty","category","default","choices","dependsOn","visibleIf","renderAs","addClass","htmlTemplate","afterRender","el","select2Config","settings","JSON","parse","$el","is","find","$otherElement","cssClasses","other","bind","isSettingValue","comment","val","updateComment","isOtherSelected","show","hide","updateValueHandler","length","trigger","undefined","newOption","Option","append","updateChoices","empty","placeholder","showOptionsCaption","optionsCaption","allowClear","theme","disabled","isReadOnly","ajax","keepIncorrectValues","data","push","id","text","concat","visibleChoices","map","choice","clearIncorrectValues","querySelector","style","width","nextElementSibling","marginBottom","readOnlyChangedCallback","registerFunctionOnPropertyValueChanged","on","e","setTimeout","renderedValue","target","removeData","preventDefault","valueChangedCallback","willUnmount","$select2","off","CustomWidgetCollection","Instance","addCustomWidget"],"sourceRoot":""}