{"version":3,"file":"widgets/pretty-checkbox.min.js","mappings":"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","sources":["webpack://surveyjs-widgets/webpack/universalModuleDefinition","webpack://surveyjs-widgets/webpack/bootstrap","webpack://surveyjs-widgets/webpack/runtime/define property getters","webpack://surveyjs-widgets/webpack/runtime/hasOwnProperty shorthand","webpack://surveyjs-widgets/webpack/runtime/make namespace object","webpack://surveyjs-widgets/./src/pretty-checkbox.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widgets/pretty-checkbox\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widgets/pretty-checkbox\"] = factory();\n\telse\n\t\troot[\"widgets/pretty-checkbox\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","function init(Survey) {\n  var widget = {\n    settings: {\n      supportedTypes: [\"radiogroup\", \"checkbox\", \"boolean\"],\n      radiogroup: {\n        rootClass: \"pretty p-default p-round\",\n        inputType: \"radio\",\n        states: [{ stateClass: \"state p-success\", addOn: \"\" }],\n      },\n      checkbox: {\n        rootClass: \"pretty p-default\",\n        inputType: \"checkbox\",\n        states: [{ stateClass: \"state p-success\", addOn: \"\" }],\n      },\n      boolean: {\n        rootClass: \"pretty p-icon p-default p-has-indeterminate\",\n        inputType: \"checkbox\",\n        states: [\n          { stateClass: \"state p-success\", addOn: \"\" },\n          {\n            stateClass: \"state p-success p-is-indeterminate\",\n            iconClass: \"icon mdi mdi-minus\",\n            addOn: \"\",\n          },\n        ],\n      },\n    },\n    name: \"pretty-checkbox\",\n    activatedBy: \"property\",\n    widgetIsLoaded: function () {\n      return true;\n    },\n    htmlTemplate: \"<fieldset></fieldset>\",\n    isFit: function (question) {\n      var isFitByType =\n        widget.settings.supportedTypes.indexOf(question.getType()) !== -1;\n\n      if (widget.activatedBy === \"property\") {\n        return question[\"renderAs\"] === \"prettycheckbox\" && isFitByType;\n      } else if (widget.activatedBy === \"type\") {\n        return isFitByType;\n      }\n\n      return false;\n    },\n    activatedByChanged: function (value) {\n      if (this.widgetIsLoaded()) {\n        widget.activatedBy = value;\n        widget.settings.supportedTypes.forEach(function (supportedType) {\n          Survey.JsonObject.metaData.removeProperty(supportedType, \"renderAs\");\n\n          if (value === \"property\") {\n            Survey.JsonObject.metaData.addProperty(supportedType, {\n              name: \"renderAs\",\n              category: \"general\",\n              default: \"default\",\n              choices: [\"default\", \"prettycheckbox\"],\n            });\n          }\n        });\n      }\n    },\n    isDefaultRender: false,\n    afterRender: function (question, element) {\n      var itemInputs = {};\n      var questionType = question.getType();\n      var options = this.settings[questionType];\n      var checkboxType = questionType === \"checkbox\";\n      var radiogroupType = questionType === \"radiogroup\";\n      var booleanType = questionType === \"boolean\";\n\n      var inChangeHandler = false;\n      var changeHandler = function (event) {\n        inChangeHandler = true;\n        try {\n          var target = arguments[0].target;\n          var targetValue = target.value;\n          var targetChecked = target.checked;\n\n          if (checkboxType) {\n            var questionValue = question.createValueCopy() || [];\n            var valueIndex = questionValue.indexOf(targetValue);\n            if (targetChecked) {\n              if (valueIndex === -1) {\n                questionValue.push(targetValue);\n              }\n            } else {\n              if (valueIndex !== -1) {\n                questionValue.splice(valueIndex, 1);\n              }\n            }\n\n            question.value = questionValue;\n          } else if (radiogroupType) {\n            question.value = targetValue;\n          } else {\n            question.value = targetChecked;\n          }\n        } finally {\n          inChangeHandler = false;\n        }\n      };\n\n      var itemWidth =\n        question.colCount > 0 ? 100 / question.colCount + \"%\" : \"\";\n\n      var choices = booleanType\n        ? [{ locText: question.locTitle, value: !!question.value }]\n        : question.visibleChoices;\n      choices.forEach(function (choiceItem, index) {\n        var input = document.createElement(\"input\");\n        input.type = options.inputType;\n        input.name = question.name + (checkboxType ? \"\" + index : \"\");\n        input.onchange = changeHandler;\n        input.value = choiceItem.value;\n\n        if (booleanType && question.value === null) {\n          input.indeterminate = question.defaultValue === \"indeterminate\";\n        }\n\n        var controlRoot = document.createElement(\"div\");\n        controlRoot.className = options.rootClass;\n        controlRoot.appendChild(input);\n\n        options.states.forEach(function (state) {\n          var stateRoot = document.createElement(\"div\");\n          stateRoot.className = state.stateClass;\n          if (!!state.iconClass) {\n            var icon = document.createElement(\"i\");\n            icon.className = state.iconClass;\n            stateRoot.appendChild(icon);\n          }\n\n          var label = document.createElement(\"label\");\n          if (choiceItem.locText.hasHtml) {\n            label.innerHTML = choiceItem.locText.html;\n          } else {\n            label.textContent = choiceItem.locText.renderedText;\n          }\n          stateRoot.appendChild(label);\n\n          controlRoot.appendChild(stateRoot);\n          if (!!state.addOn) {\n            stateRoot.insertAdjacentHTML(\"afterbegin\", state.addOn);\n          }\n        });\n\n        var itemRoot = document.createElement(\"div\");\n        itemRoot.className = \"sv_cw_pretty_checkbox_\" + questionType;\n        itemRoot.style.display = \"inline-block\";\n        itemRoot.style.width = itemWidth;\n        itemRoot.appendChild(controlRoot);\n\n        element.appendChild(itemRoot);\n\n        itemInputs[choiceItem.value] = input;\n      });\n\n      var updateValueHandler = function (newValue) {\n        if (!inChangeHandler) {\n          var checkedItems = newValue || [];\n          if (radiogroupType || booleanType) {\n            checkedItems = [newValue && newValue.toString()];\n          }\n\n          Object.values(itemInputs).forEach(function (inputItem) {\n            if (checkedItems.indexOf(inputItem.value) !== -1) {\n              inputItem.setAttribute(\"checked\", undefined);\n            } else {\n              inputItem.removeAttribute(\"checked\");\n            }\n          });\n        }\n      };\n      var readOnlyHandler = function () {\n        Object.values(itemInputs).forEach(function (inputItem) {\n          if (question.isReadOnly) {\n            inputItem.setAttribute(\"disabled\", true);\n          } else {\n            inputItem.removeAttribute(\"disabled\");\n          }\n        });\n      };\n\n      question.valueChangedCallback = updateValueHandler;\n      question.readOnlyChangedCallback = readOnlyHandler;\n      updateValueHandler(question.value);\n      readOnlyHandler();\n    },\n    willUnmount: function (question, el) {\n      question.valueChangedCallback = undefined;\n      question.readOnlyChangedCallback = undefined;\n    },\n  };\n\n  Survey.CustomWidgetCollection.Instance.addCustomWidget(widget, \"property\");\n}\n\nif (typeof Survey !== \"undefined\") {\n  init(Survey);\n}\n\nexport default init;\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","init","Survey","widget","settings","supportedTypes","radiogroup","rootClass","inputType","states","stateClass","addOn","checkbox","boolean","iconClass","name","activatedBy","widgetIsLoaded","htmlTemplate","isFit","question","isFitByType","indexOf","getType","activatedByChanged","this","forEach","supportedType","JsonObject","metaData","removeProperty","addProperty","category","default","choices","isDefaultRender","afterRender","element","itemInputs","questionType","options","checkboxType","radiogroupType","booleanType","inChangeHandler","changeHandler","event","target","arguments","targetValue","targetChecked","checked","questionValue","createValueCopy","valueIndex","push","splice","itemWidth","colCount","locText","locTitle","visibleChoices","choiceItem","index","input","document","createElement","type","onchange","indeterminate","defaultValue","controlRoot","className","appendChild","state","stateRoot","icon","label","hasHtml","innerHTML","html","textContent","renderedText","insertAdjacentHTML","itemRoot","style","display","width","updateValueHandler","newValue","checkedItems","toString","values","inputItem","setAttribute","undefined","removeAttribute","readOnlyHandler","isReadOnly","valueChangedCallback","readOnlyChangedCallback","willUnmount","el","CustomWidgetCollection","Instance","addCustomWidget"],"sourceRoot":""}